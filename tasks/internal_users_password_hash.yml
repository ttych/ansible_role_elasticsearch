---

- name: stat password hash file
  stat:
    path: "{{ elasticsearch_credentials_dir }}/{{ internal_user }}.password_hash"
  register: t_elasticsearch_internal_user_password_hash_file

# no password hash file
- block:

    # no password hash
    - block:

        # gen password hash
        - name: generate password hash
          command: "{{ elasticsearch_dist_active_hash}} -p '{{ t_elasticsearch_internal_user_password_file_content.stdout | trim }}'"
          environment:
            ELASTICSEARCH_JAVA_HOME: "{{ elasticsearch_dist_active_jdk }}"
          register: t_elasticsearch_internal_user_password_hash_cmd

        # refine password hash
        - name: refine password hash
          set_fact:
            t_elasticsearch_internal_user_password_hash: "{{ t_elasticsearch_internal_user_password_hash_cmd.stdout | trim }}"

      when: (("elasticsearch_internal_user_" + internal_user + "_password_hash") not in vars) and (("elasticsearch_internal_user_" + internal_user + "_password_hash") not in hostvars)

    # with password hash
    - name: refine password
      set_fact:
        t_elasticsearch_internal_user_password_hash: "{{ hostvars['elasticsearch_internal_user_' + internal_user + '_password_hash'] | d(vars['elasticsearch_internal_user_' + internal_user + '_password_hash']) }}"
      when: (("elasticsearch_internal_user_" + internal_user + "_password_hash") in vars) or (("elasticsearch_internal_user_" + internal_user + "_password_hash") in hostvars)


    # save password hash
    - name: save password hash
      copy:
        content: "{{ t_elasticsearch_internal_user_password_hash }}"
        dest: "{{ elasticsearch_credentials_dir }}/{{ internal_user }}.password_hash"
        mode: "0600"
        owner: "{{ elasticsearch_admin_user }}"
        group: "{{ elasticsearch_group }}"

  when: not t_elasticsearch_internal_user_password_hash_file.stat.exists

# reload password hash file
- name: reload password hash file
  command: "cat '{{ elasticsearch_credentials_dir }}/{{ internal_user }}.password_hash'"
  changed_when: no
  register: t_elasticsearch_internal_user_password_hash_file_content

# set password hash
- name: set password_hash
  set_fact:
    "{{ 'elasticsearch_internal_user_' ~ internal_user ~ '_password_hash' }}": "{{ t_elasticsearch_internal_user_password_hash_file_content.stdout | trim }}"
